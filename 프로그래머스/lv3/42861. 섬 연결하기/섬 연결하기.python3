def solution(n, costs):
    # Kruskal 알고리즘 참고하기!! : https://gmlwjd9405.github.io/2018/08/29/algorithm-kruskal-mst.html
    
    costs = sorted(costs, key=lambda x:x[2])    # 비용을 기준으로 오름차순 정렬
    node = set([costs[0][0], costs[0][1]])      # 0에서 1로의 비용인지 set화해 node로 할당
    answer = costs[0][2]        # 0에서 1로 가는 비용만 따로 answer에 저장

    while len(node) != n:       # node가 섬의 개수와 같을 때까지 진행
        for i in range(1, len(costs)):
            if costs[i][0] in node and costs[i][1] in node:
                continue
            if costs[i][0] in node or costs[i][1] in node:  # 둘 중에 하나라도 node에 있으면
                node.update([costs[i][0], costs[i][1]])
                answer += costs[i][2]       # answer에 추가
                break
    return answer